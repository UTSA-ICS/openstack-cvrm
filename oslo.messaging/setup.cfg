[metadata]
name = oslo.messaging
author = OpenStack
author-email = openstack-dev@lists.openstack.org
summary = Oslo Messaging API
description-file =
    README.rst
home-page = https://launchpad.net/oslo
classifier =
    Development Status :: 4 - Beta
    Environment :: OpenStack
    Intended Audience :: Developers
    Intended Audience :: Information Technology
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 2.6
    Programming Language :: Python :: 2.7

[files]
packages =
    oslo
namespace_packages =
    oslo

[entry_points]
console_scripts =
    oslo-messaging-zmq-receiver = oslo.messaging._cmd.zmq_receiver:main

oslo.messaging.drivers =
    rabbit = oslo.messaging._drivers.impl_rabbit:RabbitDriver
    qpid = oslo.messaging._drivers.impl_qpid:QpidDriver
    zmq = oslo.messaging._drivers.impl_zmq:ZmqDriver
    amqp = oslo.messaging._drivers.protocols.amqp.driver:ProtonDriver

    # To avoid confusion
    kombu = oslo.messaging._drivers.impl_rabbit:RabbitDriver

    # This is just for internal testing
    fake = oslo.messaging._drivers.impl_fake:FakeDriver

oslo.messaging.executors =
    blocking = oslo.messaging._executors.impl_blocking:BlockingExecutor
    eventlet = oslo.messaging._executors.impl_eventlet:EventletExecutor

oslo.messaging.notify.drivers =
    messagingv2 = oslo.messaging.notify._impl_messaging:MessagingV2Driver
    messaging = oslo.messaging.notify._impl_messaging:MessagingDriver
    log = oslo.messaging.notify._impl_log:LogDriver
    test = oslo.messaging.notify._impl_test:TestDriver
    noop = oslo.messaging.notify._impl_noop:NoOpDriver
    routing = oslo.messaging.notify._impl_routing:RoutingDriver

oslo.config.opts =
    oslo.messaging = oslo.messaging.opts:list_opts

[build_sphinx]
source-dir = doc/source
build-dir = doc/build
all_files = 1

[upload_sphinx]
upload-dir = doc/build/html

[compile_catalog]
directory = oslo.messaging/locale
domain = oslo.messaging

[update_catalog]
domain = oslo.messaging
output_dir = oslo.messaging/locale
input_file = oslo.messaging/locale/oslo.messaging.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = oslo.messaging/locale/oslo.messaging.pot
