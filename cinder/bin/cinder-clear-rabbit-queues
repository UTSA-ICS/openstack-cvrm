#!/usr/bin/env python
# Copyright (c) 2011 OpenStack Foundation
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

"""Admin/debug script to wipe rabbitMQ (AMQP) queues cinder uses.
   This can be used if you need to change durable options on queues,
   or to wipe all messages in the queue system if things are in a
   serious bad way.

"""

import os
import sys

from oslo.config import cfg

# If ../cinder/__init__.py exists, add ../ to Python search path, so that
# it will override what happens to be installed in /usr/(local/)lib/python...
POSSIBLE_TOPDIR = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(POSSIBLE_TOPDIR, 'cinder', '__init__.py')):
    sys.path.insert(0, POSSIBLE_TOPDIR)

from cinder.openstack.common import gettextutils
gettextutils.install('cinder')

# Need to register global_opts
from cinder.common import config  # noqa
from cinder.openstack.common import log as logging
from cinder.openstack.common import rpc
from cinder import version


delete_exchange_opt = \
    cfg.BoolOpt('delete_exchange',
                default=False,
                help='delete cinder exchange too.')

CONF = cfg.CONF
CONF.register_cli_opt(delete_exchange_opt)


def delete_exchange(exch):
    conn = rpc.create_connection()
    x = conn.get_channel()
    x.exchange_delete(exch)


def delete_queues(queues):
    conn = rpc.create_connection()
    x = conn.get_channel()
    for q in queues:
        x.queue_delete(q)

if __name__ == '__main__':
    args = CONF(sys.argv[1:], project='cinder',
                version=version.version_string())
    logging.setup("cinder")
    delete_queues(args[1:])
    if CONF.delete_exchange:
        delete_exchange(CONF.control_exchange)
